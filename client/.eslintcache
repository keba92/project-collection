[{"D:\\Itransition\\project\\client\\src\\index.js":"1","D:\\Itransition\\project\\client\\src\\App.js":"2","D:\\Itransition\\project\\client\\src\\components\\LoginButton.js":"3","D:\\Itransition\\project\\client\\src\\components\\LogoutButton.js":"4","D:\\Itransition\\project\\client\\src\\components\\Profile.js":"5","D:\\Itransition\\project\\client\\src\\components\\Header.js":"6","D:\\Itransition\\project\\client\\src\\components\\Body.js":"7","D:\\Itransition\\project\\client\\src\\components\\User.js":"8","D:\\Itransition\\project\\client\\src\\components\\Search.js":"9","D:\\Itransition\\project\\client\\src\\components\\UserPage.js":"10","D:\\Itransition\\project\\client\\src\\components\\CreateCollection.js":"11","D:\\Itransition\\project\\client\\src\\components\\TableItems.js":"12","D:\\Itransition\\project\\client\\src\\components\\Home.js":"13","D:\\Itransition\\project\\client\\src\\components\\privateRoute.js":"14","D:\\Itransition\\project\\client\\src\\components\\UserProfileButton.js":"15","D:\\Itransition\\project\\client\\src\\components\\ItemInfo.js":"16","D:\\Itransition\\project\\client\\src\\components\\TableCollection.js":"17","D:\\Itransition\\project\\client\\src\\components\\CreateItem.js":"18","D:\\Itransition\\project\\client\\src\\components\\DeleteButtonItem.js":"19","D:\\Itransition\\project\\client\\src\\components\\EditItem.js":"20","D:\\Itransition\\project\\client\\src\\components\\LikeButton.js":"21","D:\\Itransition\\project\\client\\src\\components\\BoxComment.js":"22"},{"size":436,"mtime":1609225341456,"results":"23","hashOfConfig":"24"},{"size":232,"mtime":1609334019185,"results":"25","hashOfConfig":"24"},{"size":324,"mtime":1609225341428,"results":"26","hashOfConfig":"24"},{"size":353,"mtime":1609688240924,"results":"27","hashOfConfig":"24"},{"size":320,"mtime":1609663480069,"results":"28","hashOfConfig":"24"},{"size":243,"mtime":1609240232805,"results":"29","hashOfConfig":"24"},{"size":833,"mtime":1609871518803,"results":"30","hashOfConfig":"24"},{"size":445,"mtime":1609690144107,"results":"31","hashOfConfig":"24"},{"size":256,"mtime":1609240201118,"results":"32","hashOfConfig":"24"},{"size":603,"mtime":1609690175833,"results":"33","hashOfConfig":"24"},{"size":5262,"mtime":1609941790805,"results":"34","hashOfConfig":"24"},{"size":2112,"mtime":1609944176886,"results":"35","hashOfConfig":"24"},{"size":726,"mtime":1609941822543,"results":"36","hashOfConfig":"24"},{"size":555,"mtime":1609691691104,"results":"37","hashOfConfig":"24"},{"size":386,"mtime":1609780612622,"results":"38","hashOfConfig":"24"},{"size":2913,"mtime":1609962629297,"results":"39","hashOfConfig":"24"},{"size":932,"mtime":1609847009777,"results":"40","hashOfConfig":"24"},{"size":4063,"mtime":1609941798958,"results":"41","hashOfConfig":"24"},{"size":778,"mtime":1609941805481,"results":"42","hashOfConfig":"24"},{"size":3043,"mtime":1609941812713,"results":"43","hashOfConfig":"24"},{"size":1388,"mtime":1609963228365,"results":"44","hashOfConfig":"24"},{"size":2652,"mtime":1609962082160,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"5ztxd7",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Itransition\\project\\client\\src\\index.js",[],["96","97"],"D:\\Itransition\\project\\client\\src\\App.js",[],"D:\\Itransition\\project\\client\\src\\components\\LoginButton.js",[],"D:\\Itransition\\project\\client\\src\\components\\LogoutButton.js",[],"D:\\Itransition\\project\\client\\src\\components\\Profile.js",[],"D:\\Itransition\\project\\client\\src\\components\\Header.js",[],"D:\\Itransition\\project\\client\\src\\components\\Body.js",[],"D:\\Itransition\\project\\client\\src\\components\\User.js",[],"D:\\Itransition\\project\\client\\src\\components\\Search.js",[],"D:\\Itransition\\project\\client\\src\\components\\UserPage.js",[],"D:\\Itransition\\project\\client\\src\\components\\CreateCollection.js",["98"],"import React, { useState, useEffect } from 'react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport TableCollection from './TableCollection';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function CreateCollection() {\r\n    const socket = io({\r\n        \"transports\": [\r\n          \"websocket\"\r\n        ]\r\n       });\r\n    const [nameCollection, setNameCollection] = useState('');\r\n    const [shortNameCollection, setShortNameCollection] = useState('');\r\n    const [urlPicture, setUrlPicture] = useState('');\r\n    const [optionCollection, setOptionCollection] = useState('');\r\n    const [poleItem, setPoleItem] = useState({ 'name': 'text', 'teg': 'text'});\r\n    const [namePole, setNamePole] = useState('');\r\n    const [typePole, setTypePole] = useState('');\r\n    const [dataCollect, setDataCollect] = useState([]);\r\n    const { user, isAuthenticated } = useAuth0();\r\n\r\n    useEffect(() => {\r\n        socket.emit('getCollection', {\r\n            id: (isAuthenticated)? user.sub : 'all'\r\n        })\r\n        socket.on('getDataCollect',(data) => {\r\n            setDataCollect(data);\r\n        })\r\n    },[]);\r\n\r\n    const addCollection = (e) =>{\r\n        e.preventDefault();\r\n        socket.emit('addCollection', {\r\n            id: user.sub,\r\n            name: nameCollection,\r\n            description: shortNameCollection,\r\n            teg: optionCollection,\r\n            url: urlPicture,\r\n            poleItem: JSON.stringify(poleItem)\r\n        })\r\n        socket.on('getDataCollect',(data) => {\r\n            setDataCollect(data);\r\n        },[])\r\n    }\r\n\r\n    const addPoleItem = (e) =>{\r\n        e.preventDefault();\r\n        if(namePole !=='' && typePole !==''){\r\n            poleItem[`${namePole}`] = typePole;\r\n        }\r\n        setPoleItem(poleItem);\r\n        console.log(poleItem)\r\n    }\r\n\r\n    return(\r\n        <div className='create-block'>\r\n            <h1 className='create'>Создать коллекцию</h1>\r\n            <div className='create-item create'>\r\n            <Form>\r\n                <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                    <Form.Label>Введите название: </Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setNameCollection(e.target.value)} placeholder='Введите название' />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>Введите краткое описание: </Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} \r\n                                    onChange={(e)=>setShortNameCollection(e.target.value)}\r\n                                    placeholder='Введите краткое описание' \r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Выберите тематику: </Form.Label>\r\n                    <Form.Control as=\"select\" onInput={(e)=>setOptionCollection(e.target.value)}>\r\n                        <option></option>\r\n                        <option value='alcohol'>Алкоголь</option>\r\n                        <option value='book'>Книга</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlInput4\">\r\n                    <Form.Label>Введите название: </Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setUrlPicture(e.target.value)} placeholder='Введите URL'/>\r\n                </Form.Group>\r\n                <Form>\r\n                  <Form.Label><b>Создать поля для Item</b></Form.Label>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput4\">\r\n                    <Form.Label>Поля Item: </Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setNamePole(e.target.value)} placeholder='Имя поля'/>\r\n                    <Form.Label>Выберите тип поля: </Form.Label>\r\n                    <Form.Control as=\"select\" onInput={(e)=>setTypePole(e.target.value)}>\r\n                        <option></option>\r\n                        <option value='number'>Числовое</option>\r\n                        <option value='text'>Текстовое(однострочное)</option>\r\n                        <option value='textarea'>Текстовое(многострочное)</option>\r\n                        <option value='date'>Дата</option>\r\n                        <option value='checkbox'>Булевое</option>\r\n                    </Form.Control>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={addPoleItem}>\r\n                        Добавить\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={addCollection}>\r\n                    Создать Коллекцию\r\n                </Button>\r\n            </Form>\r\n            </div>\r\n            <h1 className='create'>Мои коллекции</h1>\r\n            <TableCollection dataCollect={dataCollect}/>\r\n        </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\TableItems.js",["99","100"],"import { useAuth0 } from '@auth0/auth0-react';\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport {  MarkdownPreview  } from 'react-marked-markdown';\r\nimport { Link } from 'react-router-dom';\r\nimport LikeButton from './LikeButton';\r\n\r\n\r\nexport default function TabelItems(props) {\r\n    const {dataItems, idCollect} = props;\r\n    const { isAuthenticated } = useAuth0();\r\n    const collectItems = dataItems.map((el) => {\r\n        if(el.idCollect == idCollect && idCollect !== '') {\r\n            return el;\r\n        } else {\r\n            return el;\r\n        }\r\n    })\r\n    const makeItems = collectItems.map((el, idx) => {\r\n        const data = JSON.parse(el.dataItem);\r\n        const pole = JSON.parse(el.poleItem);\r\n        return (\r\n            <Card style={{ width: '15rem' }} key={idx}>\r\n                <Card.Body>\r\n                    {Object.keys(data).map((keyName, idx) => {\r\n                        // eslint-disable-next-line default-case\r\n                        switch (pole[keyName]) {\r\n                            case 'number':\r\n                            return <Card.Text key = {idx}>{`${keyName}: ${data[keyName]}`}</Card.Text>;\r\n                            case 'text':\r\n                            return <Card.Text key = {idx}>{`${keyName}: ${data[keyName]}`}</Card.Text>;\r\n                            case 'textarea':\r\n                            return <MarkdownPreview value={data[keyName]} />;\r\n                            case 'date':\r\n                            return <Card.Text key = {idx}>{`${keyName}: ${data[keyName]}`}</Card.Text>;\r\n                            case 'checkbox':\r\n                            return <Card.Text key = {idx}>{`${keyName}: ${data[keyName]}`}</Card.Text>;\r\n                        }\r\n                    })}\r\n                </Card.Body>\r\n                {(isAuthenticated)&&(<LikeButton id={el._id}/>)}\r\n                <Link to={`/item/${el._id}`}> Посмотреть </Link>\r\n            </Card>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='table-items'>\r\n            {makeItems}\r\n        </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\Home.js",["101"],"import React, { useState, useEffect } from 'react';\r\nimport TabelItems from './TableItems';\r\nimport UserProfileButton from './UserProfileButton';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function Home() {\r\n    const [items, setItems] = useState([]);\r\n    const socket = io({\r\n        \"transports\": [\r\n          \"websocket\"\r\n        ]\r\n       });\r\n    useEffect(() => {\r\n        socket.emit('getItems', {\r\n            idCollect: 'all'\r\n        })\r\n        socket.on('getDataItems',(data) => {\r\n            setItems(data);\r\n        })\r\n    },[])\r\n    return (\r\n        <div className='home-page'>\r\n            <UserProfileButton />\r\n            <TabelItems dataItems={items} idCollect=''/>\r\n        </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\privateRoute.js",[],"D:\\Itransition\\project\\client\\src\\components\\UserProfileButton.js",[],"D:\\Itransition\\project\\client\\src\\components\\ItemInfo.js",["102","103","104"],"D:\\Itransition\\project\\client\\src\\components\\TableCollection.js",[],"D:\\Itransition\\project\\client\\src\\components\\CreateItem.js",["105","106","107","108"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport TabelItems from './TableItems';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function CreateItem(props) {\r\n    const socket = io({\r\n        \"transports\": [\r\n          \"websocket\"\r\n        ]\r\n       });\r\n    const [collection, setCollection] = useState([]);\r\n    const [itemData, setItemData] = useState({});\r\n    const [dataItems, setDataItems] = useState([]);\r\n    const { user, isAuthenticated } = useAuth0();\r\n\r\n    useEffect(()=>{\r\n        socket.emit('getCollectionInfo',{\r\n            _id: props.location.pathname.slice(12)\r\n        })\r\n        socket.on('getCollectionDataInfo', (data) => {\r\n            setCollection(data)\r\n        })\r\n        socket.emit('getItems', {\r\n            idCollect: (isAuthenticated) ? props.location.pathname.slice(12) : 'all'\r\n        })\r\n        socket.on('getDataItems',(data) => {\r\n            setDataItems(data);\r\n        })\r\n    },[])\r\n\r\n    const addItem = (e) => {\r\n        e.preventDefault();\r\n        socket.emit('addItem', {\r\n            idUser: user.sub,\r\n            idCollect: props.location.pathname.slice(12),\r\n            dataItem: JSON.stringify(itemData),\r\n            poleItem: collection[0].poleItem\r\n        })\r\n        socket.on('getDataItems',(data) => {\r\n            setDataItems(data);\r\n        },[])\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <Link to={`/user/${user.sub}`}>Вернуться к коллекциям</Link>\r\n        <div className='create'>\r\n            <div className='create-block'>\r\n                <h1 className='create'>Создать Items</h1>\r\n                <Form>\r\n                    {(collection.length != 0)&&(\r\n                        Object.keys(JSON.parse(collection[0].poleItem)).map((keyName, idx) => {\r\n                            if (JSON.parse(collection[0].poleItem)[keyName] == 'checkbox' ) {\r\n                                return(\r\n                                    <Form.Check type=\"checkbox\" id=\"autoSizingCheck2\" label={keyName} />\r\n                                )\r\n                            } else if(JSON.parse(collection[0].poleItem)[keyName] == 'textarea') {\r\n                                return (\r\n                                <Form.Group key={idx} controlId={`ControlInput${idx}`}>\r\n                                       <Form.Label>Введите {`${keyName}`}: </Form.Label>\r\n                                       <Form.Control as={`${JSON.parse(collection[0].poleItem)[keyName]}`} rows={3} title={keyName} onChange={(e)=>{\r\n                                           itemData[e.target.title] = e.target.value;\r\n                                           setItemData(itemData);\r\n                                       }} />\r\n                                </Form.Group>\r\n                                )\r\n                            } else {\r\n                                return (\r\n                                    <Form.Group key={idx} controlId={`ControlInput${idx}`}>\r\n                                        <Form.Label>Введите {`${keyName}`}: </Form.Label>\r\n                                        <Form.Control type={`${JSON.parse(collection[0].poleItem)[keyName]}`} title={keyName} onChange={(e)=>{\r\n                                            itemData[e.target.title] = e.target.value;\r\n                                            setItemData(itemData);\r\n                                        }} />\r\n                                    </Form.Group>\r\n                                 )\r\n                            }\r\n                        })\r\n                    )}\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={addItem}>\r\n                        Создать\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n        <TabelItems dataItems={dataItems} idCollect={props.location.pathname.slice(12)} />  \r\n    </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\DeleteButtonItem.js",[],"D:\\Itransition\\project\\client\\src\\components\\EditItem.js",["109","110","111","112"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function EditItem(props) {\r\n    const id = props.location.pathname.slice(10);\r\n    const socket = io({\r\n        \"transports\": [\r\n          \"websocket\"\r\n        ]\r\n       });\r\n    const [itemData, setItemData] = useState([]);\r\n    const [newItemData, setNewItemData] = useState({})\r\n\r\n    useEffect(() => {\r\n        socket.emit('getItemInfo', {\r\n            _id: id\r\n        })\r\n        socket.on('getItemDataInfo',(data) => {\r\n            setItemData(data);\r\n        })\r\n    },[])\r\n\r\n    const editItem = (e) => {\r\n        e.preventDefault();\r\n        socket.emit('editItem', {\r\n            _id: id,\r\n            dataItem: JSON.stringify(newItemData)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n          <Link to={`/item/${id}`}>Вернуться к Item</Link>\r\n          <Form>\r\n            {(itemData.length != 0)&&(\r\n                Object.keys(JSON.parse(itemData[0].poleItem)).map((keyName, idx) => {\r\n                    const data = JSON.parse(itemData[0].dataItem)\r\n                    if (JSON.parse(itemData[0].poleItem)[keyName] == 'checkbox' ) {\r\n                        return (\r\n                            <Form.Check type=\"checkbox\" id=\"autoSizingCheck2\" label={keyName} />\r\n                        )\r\n                    } else if(JSON.parse(itemData[0].poleItem)[keyName] == 'textarea') {\r\n                        return (\r\n                            <Form.Group key={idx} controlId={`ControlInput${idx}`}>\r\n                                <Form.Label>Введите {`${keyName}`}: </Form.Label>\r\n                                <Form.Control as={`${JSON.parse(itemData[0].poleItem)[keyName]}`} rows={3} title={keyName} onChange={(e)=>{\r\n                                    newItemData[e.target.title] = e.target.value;\r\n                                    setNewItemData(newItemData);\r\n                                }} placeholder={data[keyName]} />\r\n                            </Form.Group>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <Form.Group key={idx} controlId={`ControlInput${idx}`}>\r\n                                <Form.Label>Введите {`${keyName}`}: </Form.Label>\r\n                                <Form.Control type={`${JSON.parse(itemData[0].poleItem)[keyName]}`} title={keyName} onChange={(e)=>{\r\n                                    newItemData[e.target.title] = e.target.value;\r\n                                    setNewItemData(newItemData);\r\n                                }} placeholder={data[keyName]} />\r\n                            </Form.Group>\r\n                        )\r\n                    }\r\n                })\r\n            )}\r\n            <Button variant=\"primary\" type=\"submit\" onClick={editItem}>\r\n                Сохранить\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\LikeButton.js",["113","114"],"D:\\Itransition\\project\\client\\src\\components\\BoxComment.js",["115","116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":30,"column":7,"nodeType":"124","endLine":30,"endColumn":9,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":13,"column":25,"nodeType":"128","messageId":"129","endLine":13,"endColumn":27},{"ruleId":"130","severity":1,"message":"131","line":25,"column":59,"nodeType":"132","messageId":"133","endLine":25,"endColumn":61},{"ruleId":"122","severity":1,"message":"134","line":20,"column":7,"nodeType":"124","endLine":20,"endColumn":9,"suggestions":"135"},{"ruleId":"122","severity":1,"message":"136","line":25,"column":8,"nodeType":"124","endLine":25,"endColumn":10,"suggestions":"137"},{"ruleId":"130","severity":1,"message":"131","line":32,"column":59,"nodeType":"132","messageId":"133","endLine":32,"endColumn":61},{"ruleId":"126","severity":1,"message":"127","line":49,"column":47,"nodeType":"128","messageId":"129","endLine":49,"endColumn":49},{"ruleId":"122","severity":1,"message":"138","line":32,"column":7,"nodeType":"124","endLine":32,"endColumn":9,"suggestions":"139"},{"ruleId":"126","severity":1,"message":"140","line":54,"column":41,"nodeType":"128","messageId":"129","endLine":54,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":56,"column":77,"nodeType":"128","messageId":"129","endLine":56,"endColumn":79},{"ruleId":"126","severity":1,"message":"127","line":60,"column":83,"nodeType":"128","messageId":"129","endLine":60,"endColumn":85},{"ruleId":"122","severity":1,"message":"141","line":23,"column":7,"nodeType":"124","endLine":23,"endColumn":9,"suggestions":"142"},{"ruleId":"126","severity":1,"message":"140","line":37,"column":31,"nodeType":"128","messageId":"129","endLine":37,"endColumn":33},{"ruleId":"126","severity":1,"message":"127","line":40,"column":67,"nodeType":"128","messageId":"129","endLine":40,"endColumn":69},{"ruleId":"126","severity":1,"message":"127","line":44,"column":73,"nodeType":"128","messageId":"129","endLine":44,"endColumn":75},{"ruleId":"122","severity":1,"message":"141","line":19,"column":7,"nodeType":"124","endLine":19,"endColumn":9,"suggestions":"143"},{"ruleId":"126","severity":1,"message":"140","line":44,"column":96,"nodeType":"128","messageId":"129","endLine":44,"endColumn":98},{"ruleId":"144","severity":1,"message":"145","line":8,"column":12,"nodeType":"146","messageId":"147","endLine":8,"endColumn":20},{"ruleId":"122","severity":1,"message":"141","line":26,"column":7,"nodeType":"124","endLine":26,"endColumn":9,"suggestions":"148"},{"ruleId":"126","severity":1,"message":"127","line":62,"column":40,"nodeType":"128","messageId":"129","endLine":62,"endColumn":42},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated', 'socket', and 'user.sub'. Either include them or remove the dependency array.","ArrayExpression",["151"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has missing dependencies: 'props.location.pathname' and 'socket'. Either include them or remove the dependency array.",["153"],"React Hook useEffect has missing dependencies: 'isAuthenticated', 'props.location.pathname', and 'socket'. Either include them or remove the dependency array.",["154"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'id' and 'socket'. Either include them or remove the dependency array.",["155"],["156"],"no-unused-vars","'comments' is assigned a value but never used.","Identifier","unusedVar",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"166","fix":"168"},{"desc":"166","fix":"169"},"Update the dependencies array to be: [isAuthenticated, socket, user.sub]",{"range":"170","text":"171"},"Update the dependencies array to be: [socket]",{"range":"172","text":"173"},"Update the dependencies array to be: [props.location.pathname, socket]",{"range":"174","text":"175"},"Update the dependencies array to be: [isAuthenticated, props.location.pathname, socket]",{"range":"176","text":"177"},"Update the dependencies array to be: [id, socket]",{"range":"178","text":"179"},{"range":"180","text":"179"},{"range":"181","text":"179"},[1160,1162],"[isAuthenticated, socket, user.sub]",[553,555],"[socket]",[839,841],"[props.location.pathname, socket]",[1082,1084],"[isAuthenticated, props.location.pathname, socket]",[674,676],"[id, socket]",[548,550],[820,822]]