[{"D:\\Itransition\\project\\client\\src\\index.js":"1","D:\\Itransition\\project\\client\\src\\App.js":"2","D:\\Itransition\\project\\client\\src\\components\\LoginButton.js":"3","D:\\Itransition\\project\\client\\src\\components\\LogoutButton.js":"4","D:\\Itransition\\project\\client\\src\\components\\Profile.js":"5","D:\\Itransition\\project\\client\\src\\components\\Header.js":"6","D:\\Itransition\\project\\client\\src\\components\\Body.js":"7","D:\\Itransition\\project\\client\\src\\components\\User.js":"8","D:\\Itransition\\project\\client\\src\\components\\Search.js":"9","D:\\Itransition\\project\\client\\src\\components\\UserPage.js":"10","D:\\Itransition\\project\\client\\src\\components\\CreateCollection.js":"11","D:\\Itransition\\project\\client\\src\\components\\TableItems.js":"12","D:\\Itransition\\project\\client\\src\\components\\Home.js":"13","D:\\Itransition\\project\\client\\src\\components\\privateRoute.js":"14","D:\\Itransition\\project\\client\\src\\components\\UserProfileButton.js":"15","D:\\Itransition\\project\\client\\src\\components\\ItemInfo.js":"16","D:\\Itransition\\project\\client\\src\\components\\TableCollection.js":"17","D:\\Itransition\\project\\client\\src\\components\\CreateItem.js":"18","D:\\Itransition\\project\\client\\src\\components\\DeleteButtonItem.js":"19","D:\\Itransition\\project\\client\\src\\components\\EditItem.js":"20"},{"size":436,"mtime":1609225341456,"results":"21","hashOfConfig":"22"},{"size":232,"mtime":1609334019185,"results":"23","hashOfConfig":"22"},{"size":324,"mtime":1609225341428,"results":"24","hashOfConfig":"22"},{"size":353,"mtime":1609688240924,"results":"25","hashOfConfig":"22"},{"size":320,"mtime":1609663480069,"results":"26","hashOfConfig":"22"},{"size":243,"mtime":1609240232805,"results":"27","hashOfConfig":"22"},{"size":833,"mtime":1609871518803,"results":"28","hashOfConfig":"22"},{"size":445,"mtime":1609690144107,"results":"29","hashOfConfig":"22"},{"size":256,"mtime":1609240201118,"results":"30","hashOfConfig":"22"},{"size":603,"mtime":1609690175833,"results":"31","hashOfConfig":"22"},{"size":5192,"mtime":1609849928737,"results":"32","hashOfConfig":"22"},{"size":1913,"mtime":1609879964714,"results":"33","hashOfConfig":"22"},{"size":656,"mtime":1609843717984,"results":"34","hashOfConfig":"22"},{"size":555,"mtime":1609691691104,"results":"35","hashOfConfig":"22"},{"size":386,"mtime":1609780612622,"results":"36","hashOfConfig":"22"},{"size":2498,"mtime":1609879838667,"results":"37","hashOfConfig":"22"},{"size":932,"mtime":1609847009777,"results":"38","hashOfConfig":"22"},{"size":3993,"mtime":1609879276667,"results":"39","hashOfConfig":"22"},{"size":708,"mtime":1609853596994,"results":"40","hashOfConfig":"22"},{"size":2973,"mtime":1609878885951,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"5ztxd7",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},"D:\\Itransition\\project\\client\\src\\index.js",[],["87","88"],"D:\\Itransition\\project\\client\\src\\App.js",[],"D:\\Itransition\\project\\client\\src\\components\\LoginButton.js",[],"D:\\Itransition\\project\\client\\src\\components\\LogoutButton.js",[],"D:\\Itransition\\project\\client\\src\\components\\Profile.js",[],"D:\\Itransition\\project\\client\\src\\components\\Header.js",[],"D:\\Itransition\\project\\client\\src\\components\\Body.js",[],"D:\\Itransition\\project\\client\\src\\components\\User.js",[],"D:\\Itransition\\project\\client\\src\\components\\Search.js",[],"D:\\Itransition\\project\\client\\src\\components\\UserPage.js",[],"D:\\Itransition\\project\\client\\src\\components\\CreateCollection.js",["89"],"import React, { useState, useEffect } from 'react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport TableCollection from './TableCollection';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function CreateCollection() {\r\n    const socket = io();\r\n    const [nameCollection, setNameCollection] = useState('');\r\n    const [shortNameCollection, setShortNameCollection] = useState('');\r\n    const [urlPicture, setUrlPicture] = useState('');\r\n    const [optionCollection, setOptionCollection] = useState('');\r\n    const [poleItem, setPoleItem] = useState({ 'name': 'text', 'teg': 'text'});\r\n    const [namePole, setNamePole] = useState('');\r\n    const [typePole, setTypePole] = useState('');\r\n    const [dataCollect, setDataCollect] = useState([]);\r\n    const { user, isAuthenticated } = useAuth0();\r\n\r\n    useEffect(() => {\r\n        socket.emit('getCollection', {\r\n            id: (isAuthenticated)? user.sub : 'all'\r\n        })\r\n        socket.on('getDataCollect',(data) => {\r\n            setDataCollect(data);\r\n        })\r\n    },[]);\r\n\r\n    const addCollection = (e) =>{\r\n        e.preventDefault();\r\n        socket.emit('addCollection', {\r\n            id: user.sub,\r\n            name: nameCollection,\r\n            description: shortNameCollection,\r\n            teg: optionCollection,\r\n            url: urlPicture,\r\n            poleItem: JSON.stringify(poleItem)\r\n        })\r\n        socket.on('getDataCollect',(data) => {\r\n            setDataCollect(data);\r\n        },[])\r\n    }\r\n\r\n    const addPoleItem = (e) =>{\r\n        e.preventDefault();\r\n        if(namePole !=='' && typePole !==''){\r\n            poleItem[`${namePole}`] = typePole;\r\n        }\r\n        setPoleItem(poleItem);\r\n        console.log(poleItem)\r\n    }\r\n\r\n    return(\r\n        <div className='create-block'>\r\n            <h1 className='create'>Создать коллекцию</h1>\r\n            <div className='create-item create'>\r\n            <Form>\r\n                <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                    <Form.Label>Введите название: </Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setNameCollection(e.target.value)} placeholder='Введите название' />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>Введите краткое описание: </Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} \r\n                                    onChange={(e)=>setShortNameCollection(e.target.value)}\r\n                                    placeholder='Введите краткое описание' \r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Выберите тематику: </Form.Label>\r\n                    <Form.Control as=\"select\" onInput={(e)=>setOptionCollection(e.target.value)}>\r\n                        <option></option>\r\n                        <option value='alcohol'>Алкоголь</option>\r\n                        <option value='book'>Книга</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlInput4\">\r\n                    <Form.Label>Введите название: </Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setUrlPicture(e.target.value)} placeholder='Введите URL'/>\r\n                </Form.Group>\r\n                <Form>\r\n                  <Form.Label><b>Создать поля для Item</b></Form.Label>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput4\">\r\n                    <Form.Label>Поля Item: </Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setNamePole(e.target.value)} placeholder='Имя поля'/>\r\n                    <Form.Label>Выберите тип поля: </Form.Label>\r\n                    <Form.Control as=\"select\" onInput={(e)=>setTypePole(e.target.value)}>\r\n                        <option></option>\r\n                        <option value='number'>Числовое</option>\r\n                        <option value='text'>Текстовое(однострочное)</option>\r\n                        <option value='textarea'>Текстовое(многострочное)</option>\r\n                        <option value='date'>Дата</option>\r\n                        <option value='checkbox'>Булевое</option>\r\n                    </Form.Control>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={addPoleItem}>\r\n                        Добавить\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={addCollection}>\r\n                    Создать Коллекцию\r\n                </Button>\r\n            </Form>\r\n            </div>\r\n            <h1 className='create'>Мои коллекции</h1>\r\n            <TableCollection dataCollect={dataCollect}/>\r\n        </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\TableItems.js",["90","91"],"D:\\Itransition\\project\\client\\src\\components\\Home.js",["92"],"import React, { useState, useEffect } from 'react';\r\nimport TabelItems from './TableItems';\r\nimport UserProfileButton from './UserProfileButton';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function Home() {\r\n    const [items, setItems] = useState([]);\r\n    const socket = io();\r\n    useEffect(() => {\r\n        socket.emit('getItems', {\r\n            idCollect: 'all'\r\n        })\r\n        socket.on('getDataItems',(data) => {\r\n            setItems(data);\r\n        })\r\n    },[])\r\n    return (\r\n        <div className='home-page'>\r\n            <UserProfileButton />\r\n            <TabelItems dataItems={items} idCollect=''/>\r\n        </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\privateRoute.js",[],"D:\\Itransition\\project\\client\\src\\components\\UserProfileButton.js",[],"D:\\Itransition\\project\\client\\src\\components\\ItemInfo.js",["93","94","95"],"D:\\Itransition\\project\\client\\src\\components\\TableCollection.js",[],"D:\\Itransition\\project\\client\\src\\components\\CreateItem.js",["96","97","98","99"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport TabelItems from './TableItems';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function CreateItem(props) {\r\n    const socket = io();\r\n    const [collection, setCollection] = useState([]);\r\n    const [itemData, setItemData] = useState({});\r\n    const [dataItems, setDataItems] = useState([]);\r\n    const { user, isAuthenticated } = useAuth0();\r\n\r\n    useEffect(()=>{\r\n        socket.emit('getCollectionInfo',{\r\n            _id: props.location.pathname.slice(12)\r\n        })\r\n        socket.on('getCollectionDataInfo', (data) => {\r\n            setCollection(data)\r\n        })\r\n        socket.emit('getItems', {\r\n            idCollect: (isAuthenticated) ? props.location.pathname.slice(12) : 'all'\r\n        })\r\n        socket.on('getDataItems',(data) => {\r\n            setDataItems(data);\r\n        })\r\n    },[])\r\n\r\n    const addItem = (e) => {\r\n        e.preventDefault();\r\n        socket.emit('addItem', {\r\n            idUser: user.sub,\r\n            idCollect: props.location.pathname.slice(12),\r\n            dataItem: JSON.stringify(itemData),\r\n            poleItem: collection[0].poleItem\r\n        })\r\n        socket.on('getDataItems',(data) => {\r\n            setDataItems(data);\r\n        },[])\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <Link to={`/user/${user.sub}`}>Вернуться к коллекциям</Link>\r\n        <div className='create'>\r\n            <div className='create-block'>\r\n                <h1 className='create'>Создать Items</h1>\r\n                <Form>\r\n                    {(collection.length != 0)&&(\r\n                        Object.keys(JSON.parse(collection[0].poleItem)).map((keyName, idx) => {\r\n                            if (JSON.parse(collection[0].poleItem)[keyName] == 'checkbox' ) {\r\n                                return(\r\n                                    <Form.Check type=\"checkbox\" id=\"autoSizingCheck2\" label={keyName} />\r\n                                )\r\n                            } else if(JSON.parse(collection[0].poleItem)[keyName] == 'textarea') {\r\n                                return (\r\n                                <Form.Group key={idx} controlId={`ControlInput${idx}`}>\r\n                                       <Form.Label>Введите {`${keyName}`}: </Form.Label>\r\n                                       <Form.Control as={`${JSON.parse(collection[0].poleItem)[keyName]}`} rows={3} title={keyName} onChange={(e)=>{\r\n                                           itemData[e.target.title] = e.target.value;\r\n                                           setItemData(itemData);\r\n                                       }} />\r\n                                </Form.Group>\r\n                                )\r\n                            } else {\r\n                                return (\r\n                                    <Form.Group key={idx} controlId={`ControlInput${idx}`}>\r\n                                        <Form.Label>Введите {`${keyName}`}: </Form.Label>\r\n                                        <Form.Control type={`${JSON.parse(collection[0].poleItem)[keyName]}`} title={keyName} onChange={(e)=>{\r\n                                            itemData[e.target.title] = e.target.value;\r\n                                            setItemData(itemData);\r\n                                        }} />\r\n                                    </Form.Group>\r\n                                 )\r\n                            }\r\n                        })\r\n                    )}\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={addItem}>\r\n                        Создать\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n        <TabelItems dataItems={dataItems} idCollect={props.location.pathname.slice(12)} />  \r\n    </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\DeleteButtonItem.js",[],"D:\\Itransition\\project\\client\\src\\components\\EditItem.js",["100","101","102","103"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function EditItem(props) {\r\n    const id = props.location.pathname.slice(10);\r\n    const socket = io();\r\n    const [itemData, setItemData] = useState([]);\r\n    const [newItemData, setNewItemData] = useState({})\r\n\r\n    useEffect(() => {\r\n        socket.emit('getItemInfo', {\r\n            _id: id\r\n        })\r\n        socket.on('getItemDataInfo',(data) => {\r\n            setItemData(data);\r\n        })\r\n    },[])\r\n\r\n    const editItem = (e) => {\r\n        e.preventDefault();\r\n        socket.emit('editItem', {\r\n            _id: id,\r\n            dataItem: JSON.stringify(newItemData)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n          <Link to={`/item/${id}`}>Вернуться к Item</Link>\r\n          <Form>\r\n            {(itemData.length != 0)&&(\r\n                Object.keys(JSON.parse(itemData[0].poleItem)).map((keyName, idx) => {\r\n                    const data = JSON.parse(itemData[0].dataItem)\r\n                    if (JSON.parse(itemData[0].poleItem)[keyName] == 'checkbox' ) {\r\n                        return (\r\n                            <Form.Check type=\"checkbox\" id=\"autoSizingCheck2\" label={keyName} />\r\n                        )\r\n                    } else if(JSON.parse(itemData[0].poleItem)[keyName] == 'textarea') {\r\n                        return (\r\n                            <Form.Group key={idx} controlId={`ControlInput${idx}`}>\r\n                                <Form.Label>Введите {`${keyName}`}: </Form.Label>\r\n                                <Form.Control as={`${JSON.parse(itemData[0].poleItem)[keyName]}`} rows={3} title={keyName} onChange={(e)=>{\r\n                                    newItemData[e.target.title] = e.target.value;\r\n                                    setNewItemData(newItemData);\r\n                                }} placeholder={data[keyName]} />\r\n                            </Form.Group>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <Form.Group key={idx} controlId={`ControlInput${idx}`}>\r\n                                <Form.Label>Введите {`${keyName}`}: </Form.Label>\r\n                                <Form.Control type={`${JSON.parse(itemData[0].poleItem)[keyName]}`} title={keyName} onChange={(e)=>{\r\n                                    newItemData[e.target.title] = e.target.value;\r\n                                    setNewItemData(newItemData);\r\n                                }} placeholder={data[keyName]} />\r\n                            </Form.Group>\r\n                        )\r\n                    }\r\n                })\r\n            )}\r\n            <Button variant=\"primary\" type=\"submit\" onClick={editItem}>\r\n                Сохранить\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n    )\r\n}",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":26,"column":7,"nodeType":"110","endLine":26,"endColumn":9,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":10,"column":25,"nodeType":"114","messageId":"115","endLine":10,"endColumn":27},{"ruleId":"116","severity":1,"message":"117","line":22,"column":59,"nodeType":"118","messageId":"119","endLine":22,"endColumn":61},{"ruleId":"108","severity":1,"message":"120","line":16,"column":7,"nodeType":"110","endLine":16,"endColumn":9,"suggestions":"121"},{"ruleId":"108","severity":1,"message":"122","line":19,"column":8,"nodeType":"110","endLine":19,"endColumn":10,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"117","line":26,"column":59,"nodeType":"118","messageId":"119","endLine":26,"endColumn":61},{"ruleId":"112","severity":1,"message":"113","line":42,"column":47,"nodeType":"114","messageId":"115","endLine":42,"endColumn":49},{"ruleId":"108","severity":1,"message":"124","line":28,"column":7,"nodeType":"110","endLine":28,"endColumn":9,"suggestions":"125"},{"ruleId":"112","severity":1,"message":"126","line":50,"column":41,"nodeType":"114","messageId":"115","endLine":50,"endColumn":43},{"ruleId":"112","severity":1,"message":"113","line":52,"column":77,"nodeType":"114","messageId":"115","endLine":52,"endColumn":79},{"ruleId":"112","severity":1,"message":"113","line":56,"column":83,"nodeType":"114","messageId":"115","endLine":56,"endColumn":85},{"ruleId":"108","severity":1,"message":"127","line":19,"column":7,"nodeType":"110","endLine":19,"endColumn":9,"suggestions":"128"},{"ruleId":"112","severity":1,"message":"126","line":33,"column":31,"nodeType":"114","messageId":"115","endLine":33,"endColumn":33},{"ruleId":"112","severity":1,"message":"113","line":36,"column":67,"nodeType":"114","messageId":"115","endLine":36,"endColumn":69},{"ruleId":"112","severity":1,"message":"113","line":40,"column":73,"nodeType":"114","messageId":"115","endLine":40,"endColumn":75},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated', 'socket', and 'user.sub'. Either include them or remove the dependency array.","ArrayExpression",["131"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["132"],"React Hook useEffect has missing dependencies: 'props.location.pathname' and 'socket'. Either include them or remove the dependency array.",["133"],"React Hook useEffect has missing dependencies: 'isAuthenticated', 'props.location.pathname', and 'socket'. Either include them or remove the dependency array.",["134"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'id' and 'socket'. Either include them or remove the dependency array.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [isAuthenticated, socket, user.sub]",{"range":"146","text":"147"},"Update the dependencies array to be: [socket]",{"range":"148","text":"149"},"Update the dependencies array to be: [props.location.pathname, socket]",{"range":"150","text":"151"},"Update the dependencies array to be: [isAuthenticated, props.location.pathname, socket]",{"range":"152","text":"153"},"Update the dependencies array to be: [id, socket]",{"range":"154","text":"155"},[1090,1092],"[isAuthenticated, socket, user.sub]",[483,485],"[socket]",[689,691],"[props.location.pathname, socket]",[1012,1014],"[isAuthenticated, props.location.pathname, socket]",[604,606],"[id, socket]"]