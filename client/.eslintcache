[{"D:\\Itransition\\project\\client\\src\\index.js":"1","D:\\Itransition\\project\\client\\src\\App.js":"2","D:\\Itransition\\project\\client\\src\\components\\LoginButton.js":"3","D:\\Itransition\\project\\client\\src\\components\\LogoutButton.js":"4","D:\\Itransition\\project\\client\\src\\components\\Profile.js":"5","D:\\Itransition\\project\\client\\src\\components\\Header.js":"6","D:\\Itransition\\project\\client\\src\\components\\Body.js":"7","D:\\Itransition\\project\\client\\src\\components\\User.js":"8","D:\\Itransition\\project\\client\\src\\components\\Search.js":"9","D:\\Itransition\\project\\client\\src\\components\\UserPage.js":"10","D:\\Itransition\\project\\client\\src\\components\\CreateCollection.js":"11","D:\\Itransition\\project\\client\\src\\components\\TableItems.js":"12","D:\\Itransition\\project\\client\\src\\components\\Home.js":"13","D:\\Itransition\\project\\client\\src\\components\\privateRoute.js":"14","D:\\Itransition\\project\\client\\src\\components\\UserProfileButton.js":"15","D:\\Itransition\\project\\client\\src\\components\\ItemInfo.js":"16","D:\\Itransition\\project\\client\\src\\components\\TableCollection.js":"17","D:\\Itransition\\project\\client\\src\\components\\CreateItem.js":"18","D:\\Itransition\\project\\client\\src\\components\\DeleteButtonItem.js":"19","D:\\Itransition\\project\\client\\src\\components\\EditItem.js":"20","D:\\Itransition\\project\\client\\src\\components\\LikeButton.js":"21","D:\\Itransition\\project\\client\\src\\components\\BoxComment.js":"22","D:\\Itransition\\project\\client\\src\\components\\AdminPage.js":"23","D:\\Itransition\\project\\client\\src\\components\\AdminProfileButton.js":"24","D:\\Itransition\\project\\client\\src\\components\\DeleteButtonCollect.js":"25","D:\\Itransition\\project\\client\\src\\components\\EditCollection.js":"26"},{"size":552,"mtime":1610115623811,"results":"27","hashOfConfig":"28"},{"size":232,"mtime":1609334019185,"results":"29","hashOfConfig":"28"},{"size":324,"mtime":1609225341428,"results":"30","hashOfConfig":"28"},{"size":395,"mtime":1610303723414,"results":"31","hashOfConfig":"28"},{"size":320,"mtime":1609663480069,"results":"32","hashOfConfig":"28"},{"size":243,"mtime":1609240232805,"results":"33","hashOfConfig":"28"},{"size":1081,"mtime":1610288182244,"results":"34","hashOfConfig":"28"},{"size":411,"mtime":1610303472707,"results":"35","hashOfConfig":"28"},{"size":256,"mtime":1609240201118,"results":"36","hashOfConfig":"28"},{"size":651,"mtime":1610273805918,"results":"37","hashOfConfig":"28"},{"size":6507,"mtime":1610288629314,"results":"38","hashOfConfig":"28"},{"size":2122,"mtime":1610305022484,"results":"39","hashOfConfig":"28"},{"size":1564,"mtime":1610294785881,"results":"40","hashOfConfig":"28"},{"size":555,"mtime":1609691691104,"results":"41","hashOfConfig":"28"},{"size":386,"mtime":1609780612622,"results":"42","hashOfConfig":"28"},{"size":2876,"mtime":1610288855955,"results":"43","hashOfConfig":"28"},{"size":1153,"mtime":1610288471059,"results":"44","hashOfConfig":"28"},{"size":4222,"mtime":1610288637082,"results":"45","hashOfConfig":"28"},{"size":708,"mtime":1610288653653,"results":"46","hashOfConfig":"28"},{"size":2973,"mtime":1610288671812,"results":"47","hashOfConfig":"28"},{"size":1388,"mtime":1610288747704,"results":"48","hashOfConfig":"28"},{"size":2467,"mtime":1610288617277,"results":"49","hashOfConfig":"28"},{"size":7266,"mtime":1610288602944,"results":"50","hashOfConfig":"28"},{"size":518,"mtime":1610282458108,"results":"51","hashOfConfig":"28"},{"size":729,"mtime":1610288644757,"results":"52","hashOfConfig":"28"},{"size":5380,"mtime":1610288664707,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"5ztxd7",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"56"},"D:\\Itransition\\project\\client\\src\\index.js",[],["119","120"],"D:\\Itransition\\project\\client\\src\\App.js",[],"D:\\Itransition\\project\\client\\src\\components\\LoginButton.js",[],"D:\\Itransition\\project\\client\\src\\components\\LogoutButton.js",[],"D:\\Itransition\\project\\client\\src\\components\\Profile.js",[],"D:\\Itransition\\project\\client\\src\\components\\Header.js",[],"D:\\Itransition\\project\\client\\src\\components\\Body.js",[],"D:\\Itransition\\project\\client\\src\\components\\User.js",[],"D:\\Itransition\\project\\client\\src\\components\\Search.js",[],"D:\\Itransition\\project\\client\\src\\components\\UserPage.js",[],"D:\\Itransition\\project\\client\\src\\components\\CreateCollection.js",["121"],"import React, { useState, useEffect } from 'react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport TableCollection from './TableCollection';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function CreateCollection(props) {\r\n    const socket = io();\r\n    const [nameCollection, setNameCollection] = useState('');\r\n    const [shortNameCollection, setShortNameCollection] = useState('');\r\n    const [urlPicture, setUrlPicture] = useState('');\r\n    const [optionCollection, setOptionCollection] = useState('');\r\n    const [poleItem, setPoleItem] = useState({ 'name': 'text', 'teg': 'text'});\r\n    const [namePole, setNamePole] = useState('');\r\n    const [typePole, setTypePole] = useState('');\r\n    const [dataCollect, setDataCollect] = useState([]);\r\n    const { user, isAuthenticated } = useAuth0();\r\n    const [idUser, setIdUser] = useState('');\r\n    const { idLink } = props;\r\n\r\n    useEffect(() => {\r\n        const getUserMetadata = async () => {\r\n            try {\r\n                const admindataResponse = await fetch('https://dev-lma8p4gy.eu.auth0.com/api/v2/roles/rol_T31Z6EKjiFLeoH0T/users',{\r\n                    method: 'GET',\r\n                    headers: {\r\n                        Authorization: `Bearer ${process.env.REACT_APP_AUTH0_TOKEN}`,\r\n                      },\r\n                    scope: \"read:users\",\r\n                }\r\n              );\r\n              const adminsInfo = await admindataResponse.json();\r\n              const admins = await adminsInfo.map(el => el.user_id);\r\n              let admin;\r\n              if (admins.includes(user.sub)){\r\n                admin = true;\r\n              }\r\n              let id;\r\n              if (isAuthenticated && !admin) {\r\n                  id = user.sub;\r\n                  setIdUser(id)\r\n              } else if (isAuthenticated && admin) {\r\n                  id = idLink;\r\n                  localStorage.setItem('admin', id)\r\n                  setIdUser(id)\r\n              } else {\r\n                  id = 'all';\r\n              }\r\n              await socket.emit('getCollection', {\r\n                  id: id\r\n              })\r\n              await socket.on('getDataCollect',(data) => {\r\n                  setDataCollect(data);\r\n              })\r\n            } catch (e) {\r\n              console.log(e.message);\r\n            }\r\n        };\r\n        getUserMetadata();\r\n    },[]);\r\n\r\n    const addCollection = (e) =>{\r\n        e.preventDefault();\r\n        socket.emit('addCollection', {\r\n            id: idUser,\r\n            name: nameCollection,\r\n            description: shortNameCollection,\r\n            teg: optionCollection,\r\n            url: urlPicture,\r\n            poleItem: JSON.stringify(poleItem)\r\n        })\r\n        socket.on('getDataCollect',(data) => {\r\n            setDataCollect(data);\r\n        },[])\r\n    }\r\n\r\n    const addPoleItem = (e) =>{\r\n        e.preventDefault();\r\n        if(namePole !=='' && typePole !==''){\r\n            poleItem[`${namePole}`] = typePole;\r\n        }\r\n        setPoleItem(poleItem);\r\n        console.log(poleItem)\r\n    }\r\n\r\n    return(\r\n        <div className='create-block'>\r\n            <h1 className='create'>Создать коллекцию</h1>\r\n            <div className='create-item create'>\r\n            <Form>\r\n                <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                    <Form.Label>Введите название: </Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setNameCollection(e.target.value)} placeholder='Введите название' />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>Введите краткое описание: </Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} \r\n                                    onChange={(e)=>setShortNameCollection(e.target.value)}\r\n                                    placeholder='Введите краткое описание' \r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Выберите тематику: </Form.Label>\r\n                    <Form.Control as=\"select\" onInput={(e)=>setOptionCollection(e.target.value)}>\r\n                        <option></option>\r\n                        <option value='alcohol'>Алкоголь</option>\r\n                        <option value='book'>Книга</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlInput4\">\r\n                    <Form.Label>Введите название: </Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setUrlPicture(e.target.value)} placeholder='Введите URL'/>\r\n                </Form.Group>\r\n                <Form>\r\n                  <Form.Label><b>Создать поля для Item</b></Form.Label>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput4\">\r\n                    <Form.Label>Поля Item: </Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setNamePole(e.target.value)} placeholder='Имя поля'/>\r\n                    <Form.Label>Выберите тип поля: </Form.Label>\r\n                    <Form.Control as=\"select\" onInput={(e)=>setTypePole(e.target.value)}>\r\n                        <option></option>\r\n                        <option value='number'>Числовое</option>\r\n                        <option value='text'>Текстовое(однострочное)</option>\r\n                        <option value='textarea'>Текстовое(многострочное)</option>\r\n                        <option value='date'>Дата</option>\r\n                        <option value='checkbox'>Булевое</option>\r\n                    </Form.Control>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={addPoleItem}>\r\n                        Добавить\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={addCollection}>\r\n                    Создать Коллекцию\r\n                </Button>\r\n            </Form>\r\n            </div>\r\n            <h1 className='create'>Мои коллекции</h1>\r\n            <TableCollection dataCollect={dataCollect}/>\r\n        </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\TableItems.js",["122","123"],"import { useAuth0 } from '@auth0/auth0-react';\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport {  MarkdownPreview  } from 'react-marked-markdown';\r\nimport { Link } from 'react-router-dom';\r\nimport LikeButton from './LikeButton';\r\n\r\n\r\nexport default function TabelItems(props) {\r\n    const {dataItems, idCollect} = props;\r\n    const { isAuthenticated } = useAuth0();\r\n    const collectItems = dataItems.map((el) => {\r\n        if(el.idCollect == idCollect && idCollect !== '') {\r\n            return el;\r\n        } else {\r\n            return el;\r\n        }\r\n    })\r\n    const makeItems = collectItems.reverse().map((el, idx) => {\r\n        const data = JSON.parse(el.dataItem);\r\n        const pole = JSON.parse(el.poleItem);\r\n        return (\r\n            <Card style={{ width: '15rem' }} key={idx}>\r\n                <Card.Body>\r\n                    {Object.keys(data).map((keyName, idx) => {\r\n                        // eslint-disable-next-line default-case\r\n                        switch (pole[keyName]) {\r\n                            case 'number':\r\n                            return <Card.Text key = {idx}>{`${keyName}: ${data[keyName]}`}</Card.Text>;\r\n                            case 'text':\r\n                            return <Card.Text key = {idx}>{`${keyName}: ${data[keyName]}`}</Card.Text>;\r\n                            case 'textarea':\r\n                            return <MarkdownPreview value={data[keyName]} />;\r\n                            case 'date':\r\n                            return <Card.Text key = {idx}>{`${keyName}: ${data[keyName]}`}</Card.Text>;\r\n                            case 'checkbox':\r\n                            return <Card.Text key = {idx}>{`${keyName}: ${data[keyName]}`}</Card.Text>;\r\n                        }\r\n                    })}\r\n                </Card.Body>\r\n                {(isAuthenticated)&&(<LikeButton id={el._id}/>)}\r\n                <Link to={`/item/${el._id}`}> Посмотреть </Link>\r\n            </Card>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='table-items'>\r\n            {makeItems}\r\n        </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\Home.js",["124"],"import React, { useState, useEffect } from 'react';\r\nimport TabelItems from './TableItems';\r\nimport UserProfileButton from './UserProfileButton';\r\nimport io from 'socket.io-client';\r\nimport AdminProfileButton from './AdminProfileButton';\r\n\r\nexport default function Home() {\r\n    const [items, setItems] = useState([]); \r\n    const socket = io();\r\n     useEffect(() => {\r\n        socket.emit('getItems', {\r\n            idCollect: 'all'\r\n        })\r\n        socket.on('getDataItems',(data) => {\r\n            setItems(data);\r\n        })\r\n        const getUserMetadata = async () => {\r\n            try {\r\n                const admindataResponse = await fetch('https://dev-lma8p4gy.eu.auth0.com/api/v2/roles/rol_T31Z6EKjiFLeoH0T/users',{\r\n                    method: 'GET',\r\n                    headers: {\r\n                        Authorization: `Bearer ${process.env.REACT_APP_AUTH0_TOKEN}`,\r\n                      },\r\n                    scope: \"read:users\",\r\n                  }\r\n                );\r\n                const adminsInfo = await admindataResponse.json();\r\n                const admins = await adminsInfo.map(el => el.user_id);\r\n                localStorage.setItem('arrAdmins', JSON.stringify(admins))\r\n            }catch (e) {\r\n                  console.log(e.message);\r\n                }\r\n            };\r\n            getUserMetadata();\r\n    },[])\r\n    return (\r\n        <div className='home-page'>\r\n            <AdminProfileButton />\r\n            <UserProfileButton />\r\n            <TabelItems dataItems={items} idCollect=''/>\r\n        </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\privateRoute.js",[],"D:\\Itransition\\project\\client\\src\\components\\UserProfileButton.js",[],"D:\\Itransition\\project\\client\\src\\components\\ItemInfo.js",["125","126","127","128","129"],"import React, { useState, useEffect } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport {  MarkdownPreview  } from 'react-marked-markdown';\r\nimport { Link } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport DeleteButtonItem from './DeleteButtonItem';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport LikeButton from './LikeButton';\r\nimport BoxComment from './BoxComment';\r\n\r\nexport default function ItemInfo(props) {\r\n    const socket = io();\r\n    const { user, isAuthenticated } = useAuth0();\r\n    const [item, setItem] = useState([])\r\n\r\n    useEffect(()=>{\r\n        socket.emit('getItemInfo',{\r\n            _id: props.location.pathname.slice(6)\r\n        })\r\n        socket.on('getItemDataInfo', (data) => setItem(data))\r\n    }, [])\r\n    const makeItem = item.map((el, idx) => {\r\n        const data = JSON.parse(el.dataItem);\r\n        const pole = JSON.parse(el.poleItem);\r\n        return (\r\n            <Card style={{ width: '15rem' }} key={idx}>\r\n                <Card.Body>\r\n                    {Object.keys(data).map((keyName, idx) => {\r\n                        // eslint-disable-next-line default-case\r\n                        switch (pole[keyName]) {\r\n                            case 'number':\r\n                            return <Card.Text key={idx}>{`${keyName}: ${data[keyName]}`}</Card.Text>;\r\n                            case 'text':\r\n                            return <Card.Text key={idx}>{`${keyName}: ${data[keyName]}`}</Card.Text>;\r\n                            case 'textarea':\r\n                            return <MarkdownPreview value={data[keyName]} />;\r\n                            case 'date':\r\n                            return <Card.Text key={idx}>{`${keyName}: ${data[keyName]}`}</Card.Text>;\r\n                            case 'checkbox':\r\n                            return <Card.Text key={idx}>{`${keyName}: ${data[keyName]}`}</Card.Text>;\r\n                        }\r\n                    })}\r\n                </Card.Body>\r\n                {(isAuthenticated)&&(<LikeButton id={props.location.pathname.slice(6)}/>)}\r\n                {(isAuthenticated && user.sub == el.idUser || localStorage.getItem('admin'))&&(\r\n                    <div>\r\n                        <DeleteButtonItem id={props.location.pathname.slice(6)} />\r\n                        <Link to={`/editItem/${props.location.pathname.slice(6)}`}>Редактировать</Link>\r\n                    </div>\r\n                )}\r\n            </Card>\r\n        )\r\n    })\r\n\r\n    return (\r\n        (item.length!==0)&&(\r\n            <div>\r\n                <Link to='/'>На главную страницу</Link>\r\n                <div className='content-item'>\r\n                    {makeItem}\r\n                    {(isAuthenticated)&&(<BoxComment id={props.location.pathname.slice(6)} />)}\r\n                </div>\r\n            </div>\r\n        )\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\TableCollection.js",[],"D:\\Itransition\\project\\client\\src\\components\\CreateItem.js",["130","131","132","133"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport TabelItems from './TableItems';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function CreateItem(props) {\r\n    const socket = io();\r\n    const [collection, setCollection] = useState([]);\r\n    const [itemData, setItemData] = useState({});\r\n    const [dataItems, setDataItems] = useState([]);\r\n    const { user, isAuthenticated } = useAuth0();\r\n    const [id, setId] = useState('');\r\n\r\n    useEffect(()=>{\r\n        let idUser;\r\n        socket.emit('getCollectionInfo',{\r\n            _id: props.location.pathname.slice(12)\r\n        })\r\n        socket.on('getCollectionDataInfo', (data) => {\r\n            setCollection(data)\r\n        })\r\n        socket.emit('getItems', {\r\n            idCollect: (isAuthenticated) ? props.location.pathname.slice(12) : 'all'\r\n        })\r\n        socket.on('getDataItems',(data) => {\r\n            setDataItems(data);\r\n        })\r\n        if(localStorage.getItem('admin')) {\r\n            idUser = localStorage.getItem('admin');\r\n        } else {\r\n            idUser = user.sub\r\n        }\r\n        setId(idUser)\r\n    },[])\r\n\r\n    const addItem = (e) => {\r\n        e.preventDefault();\r\n        socket.emit('addItem', {\r\n            idUser: id,\r\n            idCollect: props.location.pathname.slice(12),\r\n            dataItem: JSON.stringify(itemData),\r\n            poleItem: collection[0].poleItem\r\n        })\r\n        socket.on('getDataItems',(data) => {\r\n            setDataItems(data);\r\n        },[])\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <Link to={`/user/${id}`}>Вернуться к коллекциям</Link>\r\n        <div className='create'>\r\n            <div className='create-block'>\r\n                <h1 className='create'>Создать Items</h1>\r\n                <Form>\r\n                    {(collection.length != 0)&&(\r\n                        Object.keys(JSON.parse(collection[0].poleItem)).map((keyName, idx) => {\r\n                            if (JSON.parse(collection[0].poleItem)[keyName] == 'checkbox' ) {\r\n                                return(\r\n                                    <Form.Check type=\"checkbox\" id=\"autoSizingCheck2\" label={keyName} />\r\n                                )\r\n                            } else if(JSON.parse(collection[0].poleItem)[keyName] == 'textarea') {\r\n                                return (\r\n                                <Form.Group key={idx} controlId={`ControlInput${idx}`}>\r\n                                       <Form.Label>Введите {`${keyName}`}: </Form.Label>\r\n                                       <Form.Control as={`${JSON.parse(collection[0].poleItem)[keyName]}`} rows={3} title={keyName} onChange={(e)=>{\r\n                                           itemData[e.target.title] = e.target.value;\r\n                                           setItemData(itemData);\r\n                                       }} />\r\n                                </Form.Group>\r\n                                )\r\n                            } else {\r\n                                return (\r\n                                    <Form.Group key={idx} controlId={`ControlInput${idx}`}>\r\n                                        <Form.Label>Введите {`${keyName}`}: </Form.Label>\r\n                                        <Form.Control type={`${JSON.parse(collection[0].poleItem)[keyName]}`} title={keyName} onChange={(e)=>{\r\n                                            itemData[e.target.title] = e.target.value;\r\n                                            setItemData(itemData);\r\n                                        }} />\r\n                                    </Form.Group>\r\n                                 )\r\n                            }\r\n                        })\r\n                    )}\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={addItem}>\r\n                        Создать\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n        <TabelItems dataItems={dataItems} idCollect={props.location.pathname.slice(12)} />  \r\n    </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\DeleteButtonItem.js",[],"D:\\Itransition\\project\\client\\src\\components\\EditItem.js",["134","135","136","137"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function EditItem(props) {\r\n    const id = props.location.pathname.slice(10);\r\n    const socket = io();\r\n    const [itemData, setItemData] = useState([]);\r\n    const [newItemData, setNewItemData] = useState({})\r\n\r\n    useEffect(() => {\r\n        socket.emit('getItemInfo', {\r\n            _id: id\r\n        })\r\n        socket.on('getItemDataInfo',(data) => {\r\n            setItemData(data);\r\n        })\r\n    },[])\r\n\r\n    const editItem = (e) => {\r\n        e.preventDefault();\r\n        socket.emit('editItem', {\r\n            _id: id,\r\n            dataItem: JSON.stringify(newItemData)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n          <Link to={`/item/${id}`}>Вернуться к Item</Link>\r\n          <Form>\r\n            {(itemData.length != 0)&&(\r\n                Object.keys(JSON.parse(itemData[0].poleItem)).map((keyName, idx) => {\r\n                    const data = JSON.parse(itemData[0].dataItem)\r\n                    if (JSON.parse(itemData[0].poleItem)[keyName] == 'checkbox' ) {\r\n                        return (\r\n                            <Form.Check type=\"checkbox\" id=\"autoSizingCheck2\" label={keyName} />\r\n                        )\r\n                    } else if(JSON.parse(itemData[0].poleItem)[keyName] == 'textarea') {\r\n                        return (\r\n                            <Form.Group key={idx} controlId={`ControlInput${idx}`}>\r\n                                <Form.Label>Введите {`${keyName}`}: </Form.Label>\r\n                                <Form.Control as={`${JSON.parse(itemData[0].poleItem)[keyName]}`} rows={3} title={keyName} onChange={(e)=>{\r\n                                    newItemData[e.target.title] = e.target.value;\r\n                                    setNewItemData(newItemData);\r\n                                }} placeholder={data[keyName]} />\r\n                            </Form.Group>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <Form.Group key={idx} controlId={`ControlInput${idx}`}>\r\n                                <Form.Label>Введите {`${keyName}`}: </Form.Label>\r\n                                <Form.Control type={`${JSON.parse(itemData[0].poleItem)[keyName]}`} title={keyName} onChange={(e)=>{\r\n                                    newItemData[e.target.title] = e.target.value;\r\n                                    setNewItemData(newItemData);\r\n                                }} placeholder={data[keyName]} />\r\n                            </Form.Group>\r\n                        )\r\n                    }\r\n                })\r\n            )}\r\n            <Button variant=\"primary\" type=\"submit\" onClick={editItem}>\r\n                Сохранить\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\LikeButton.js",["138","139"],"import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nexport default function LikeButton(props) {\r\n    const socket = io();\r\n    const { id } = props;\r\n    const [like, setLike] = useState([]);\r\n    const [arrUsers, setArrUsers] = useState([]);\r\n    const { user } = useAuth0();\r\n\r\n    useEffect(()=>{\r\n        socket.emit('getLike', {\r\n            idItem: id\r\n        })\r\n        socket.on('getLikeInfo', (data)=> {\r\n            setLike(data)\r\n        })\r\n    },[])\r\n\r\n    const makeLike = (e) => {\r\n        e.preventDefault();\r\n        if(!like[0].idUsers.includes(user.sub)) {\r\n            const newArrUser = like[0].idUsers.concat();\r\n            newArrUser.push(user.sub);\r\n            setArrUsers(newArrUser);\r\n            socket.emit('updateLike', {\r\n                idItem: id,\r\n                countLike: like[0].countLike + 1,\r\n                idUsers: arrUsers\r\n            })\r\n            socket.emit('getLike', {\r\n                idItem: id\r\n            })\r\n            socket.on('getLikeInfo', (data)=> {\r\n                setLike(data)\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <span>\r\n                <i className=\"fa fa-heart\" aria-hidden=\"true\" onClick={makeLike}> {(like.length!=0)&&(like[0].countLike)} </i>\r\n            </span>\r\n        </>\r\n    )\r\n} ","D:\\Itransition\\project\\client\\src\\components\\BoxComment.js",["140","141"],"import React, { useState, useEffect} from 'react';\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function BoxComment(props){\r\n    const [textComment, setTextComment] = useState('');\r\n    const [newArrComment, setNewArrComment] = useState([]);\r\n    const { user } = useAuth0();\r\n    const { id } = props;\r\n    const socket = io();\r\n\r\n    useEffect(()=>{\r\n        socket.emit('getComment',{\r\n            idItem: id\r\n        })\r\n        socket.on('getCommentData', (data)=> {\r\n            setNewArrComment(data[0].arrComment);\r\n        })\r\n    },[])\r\n\r\n    const makeComment = newArrComment.map((el,idx)=>{\r\n        const obj = JSON.parse(el);\r\n        return(\r\n            <div className='comment' key={idx}>\r\n                <span> <b>{obj.nameUser}</b> </span>\r\n                <p> {obj.message} </p>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const addComment = (e) =>{\r\n        e.preventDefault();\r\n        newArrComment.push(JSON.stringify({\r\n            nameUser: user.name,\r\n            message: textComment\r\n        }));\r\n        setNewArrComment(newArrComment)\r\n        socket.emit('updateComment', {\r\n            idItem: id,\r\n            arrComment: newArrComment \r\n        })\r\n        socket.emit('getComment',{\r\n            idItem: id\r\n        })\r\n        socket.on('getCommentData', (data)=> {\r\n            setNewArrComment(data[0].arrComment);\r\n        },[])\r\n    }\r\n\r\n    return(\r\n        <div className='comment-box'>\r\n            <h4>Комментарии</h4>\r\n            <div className='comment-body'>\r\n                {(newArrComment.length == 0)?(<p>Пока комментариев нет!</p>):(makeComment)}\r\n            </div>\r\n            <div className='comment-footer'>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                    placeholder=\"Введите сообщение\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    onChange={(e)=>setTextComment(e.target.value)}\r\n                    />\r\n                    <InputGroup.Append>\r\n                        <Button \r\n                        variant=\"outline-secondary\"\r\n                        onClick={addComment}\r\n                        >Отправить</Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Itransition\\project\\client\\src\\components\\AdminPage.js",["142","143","144","145","146","147"],"import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport io from 'socket.io-client';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Checkbox = ({ type = \"checkbox\", checked = false, onChange, title, value }) => {\r\n    return (\r\n      <input type={type} className ='form-check-input' checked={checked} onChange={onChange} title ={title} value={value} />\r\n    );\r\n};\r\nfunction AdminPage() {\r\n    const [data, setData] = useState([]);\r\n    const [checkedItems, setCheckedItems] = useState({});\r\n    const [checkedAll, setCheckedAll] = useState(false);\r\n    const [adminList, setAdminList] = useState([]);\r\n    const socket = io();\r\n    const idUsers = []\r\n\r\n    useEffect(() =>{\r\n        const getUserMetadata = async () => {\r\n      \r\n            try {\r\n\r\n              const metadataResponse = await fetch('https://dev-lma8p4gy.eu.auth0.com/api/v2/users',{\r\n                  method: 'GET',\r\n                  params: {q: 'logins_count:{0 TO *]', search_engine: 'v3'},\r\n                  headers: {\r\n                    Authorization: `Bearer ${process.env.REACT_APP_AUTH0_TOKEN}`,\r\n                  },\r\n                  scope: \"read:user_idp_tokens\",\r\n                }\r\n              );\r\n\r\n                const admindataResponse = await fetch('https://dev-lma8p4gy.eu.auth0.com/api/v2/roles/rol_T31Z6EKjiFLeoH0T/users',{\r\n                    method: 'GET',\r\n                    headers: {\r\n                        Authorization: `Bearer ${process.env.REACT_APP_AUTH0_TOKEN}`,\r\n                      },\r\n                    scope: \"read:users\",\r\n                }\r\n              );\r\n\r\n              const adminsInfo = await admindataResponse.json();\r\n              const admins = adminsInfo.map(el => el.user_id)\r\n              setAdminList(admins)\r\n        \r\n              const info = await metadataResponse.json();      \r\n              setData(info);\r\n            } catch (e) {\r\n              console.log(e.message);\r\n            }\r\n          };\r\n          getUserMetadata();  \r\n    },[])\r\n\r\n    const handleChange = (event) => {\r\n        setCheckedItems({...checkedItems, [event.target.value] : event.target.checked });\r\n        if(!event.target.checked && checkedAll==true){\r\n            selectAll(false);\r\n        }\r\n    }\r\n\r\n    const deleteUsers = (e) => {\r\n        e.preventDefault();\r\n\t\tObject.keys(checkedItems).map((keyName) => {\r\n            // eslint-disable-next-line no-restricted-globals\r\n            const answer = confirm(`Вы уверены, что хотите удалить пользователя с id:'${keyName}'?`)\r\n            if(checkedItems[keyName] && answer) {\r\n                socket.emit('deleteUser', {\r\n                    message: process.env.REACT_APP_AUTH0_TOKEN,\r\n                    idUser: keyName\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const makeAdmin = (e) => {\r\n        e.preventDefault();\r\n        Object.keys(checkedItems).map((keyName) => {\r\n            if(checkedItems[keyName]) {\r\n                adminList.push(keyName);\r\n                setAdminList(adminList);\r\n                socket.emit('makeAdmin', {\r\n                    message: process.env.REACT_APP_AUTH0_TOKEN,\r\n                    adminList: adminList\r\n                })\r\n            }\r\n        })\r\n    }\r\n    \r\n    const tableTemplate = data.map((row) => {\r\n        idUsers.push(row.user_id);\r\n         return(\r\n            <tr key={row.user_id}>\r\n                <td><Checkbox checked={checkedItems[row.user_id]}\r\n                    onChange={handleChange} value ={row.user_id}/>\r\n                </td>\r\n                <td><Link to={`/user/${row.user_id}`}>{row.user_id}</Link></td>\r\n                <td>{row.name}</td>\r\n                <td>{row.email}</td>\r\n                <td>{row.created_at}</td>\r\n                <td>{row.last_login}</td>\r\n                <td>{(row.blocked)?('Block'):('OK')}</td>\r\n                <td>{(adminList.includes(row.user_id))?('Admin'):('')}</td>\r\n            </tr>\r\n         );\r\n    });\r\n\r\n    const blockUser = (e) =>{\r\n        e.preventDefault();\r\n\t\tObject.keys(checkedItems).map((keyName) => {\r\n            if(e.target.title == 'block') {\r\n                // eslint-disable-next-line no-restricted-globals\r\n                const answer = confirm(`Вы уверены, что хотите заблокировать пользователя с id:'${keyName}'?`)\r\n                if(checkedItems[keyName] && answer) {\r\n                    socket.emit('blockUser', {\r\n                        message: process.env.REACT_APP_AUTH0_TOKEN,\r\n                        idUser: keyName,\r\n                        block: true\r\n                    })\r\n                }\r\n            } else {\r\n                // eslint-disable-next-line no-restricted-globals\r\n                const answer = confirm(`Вы уверены, что хотите разблокировать пользователя с id:'${keyName}'?`)\r\n                if(checkedItems[keyName] && answer) {\r\n                    socket.emit('blockUser', {\r\n                        message: process.env.REACT_APP_AUTH0_TOKEN,\r\n                        idUser: keyName,\r\n                        block: false\r\n                    })\r\n                }\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n   const _refreshPage = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    const selectAll = (value) => {\r\n        idUsers.forEach((el) => {\r\n            checkedItems[el] = false;\r\n        })\r\n        setCheckedAll(value);\r\n        setCheckedItems((prevState) => {\r\n          const newState = { ...prevState };\r\n          for (const inputName in newState) {\r\n            newState[inputName] = value;\r\n          }\r\n          return newState;\r\n        });\r\n      };\r\n    \r\n    return(\r\n        <div className='admin-page'>\r\n            <Link to='/'>На главную страницу</Link>\r\n            <div className = 'users'>\r\n                <h1>Users</h1>\r\n                <span className = 'toolBar'>\r\n                    <button className = 'btn' title='block' onClick={blockUser}><i className='fa fa-close'>Block</i></button>\r\n                    <button className = 'btn' onClick={deleteUsers}><i className='fa fa-trash'>Delete</i></button>\r\n                    <button className = 'btn' title='unblock' onClick={blockUser}><i className='fa fa-check'>Unblock</i></button>\r\n                    <button className = 'btn' onClick={makeAdmin}><i className='fa fa-check'>Admin</i></button>\r\n                </span>\r\n                <table className ='table-light'>\r\n                    <tr>\r\n                        <th>Check All<br/>\r\n                            <input type='checkbox' className ='form-check-input' onChange={(event) => selectAll(event.target.checked)} checked={checkedAll}/>\r\n                        </th>\r\n                        <th>ID</th>\r\n                        <th>Name(Login)</th>\r\n                        <th>Email</th>\r\n                        <th>Date Registration</th>\r\n                        <th>Date Last Login</th>\r\n                        <th>Status</th>\r\n                        <th>Admin</th>\r\n                    </tr>\r\n                    {tableTemplate}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminPage;","D:\\Itransition\\project\\client\\src\\components\\AdminProfileButton.js",["148","149","150"],"import React, { useState, useEffect } from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AdminProfileButton = () => {\r\n  const { user, isAuthenticated } = useAuth0();\r\n  const admin = JSON.parse(localStorage.getItem('arrAdmins'))\r\n\r\n  return (\r\n    (isAuthenticated && admin.length !=0 && admin.includes(user.sub)) && (\r\n      <Link to={`/admin/${user.sub}`}>\r\n        Кабинет Admin\r\n      </Link>\r\n    )\r\n  )\r\n}\r\n\r\nexport default AdminProfileButton","D:\\Itransition\\project\\client\\src\\components\\DeleteButtonCollect.js",[],["151","152"],"D:\\Itransition\\project\\client\\src\\components\\EditCollection.js",["153","154","155","156","157","158"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nexport default function EditCollection(props) {\r\n    const id = props.location.pathname.slice(16);\r\n    const socket = io();\r\n    const [collectionData, setCollectionData] = useState([]);\r\n    const [nameCollection, setNameCollection] = useState('');\r\n    const [shortNameCollection, setShortNameCollection] = useState('');\r\n    const [urlPicture, setUrlPicture] = useState('');\r\n    const [optionCollection, setOptionCollection] = useState('');\r\n    const [poleItem, setPoleItem] = useState({ 'name': 'text', 'teg': 'text'});\r\n    const [namePole, setNamePole] = useState('');\r\n    const [typePole, setTypePole] = useState('');\r\n    const [newId, setNewId] = useState('');\r\n    const { user } = useAuth0();\r\n\r\n    useEffect(() => {\r\n        let idUser;\r\n        socket.emit('getCollectionInfo', {\r\n            _id: id\r\n        })\r\n        socket.on('getCollectionDataInfo',(data) => {\r\n            setCollectionData(data);\r\n        })\r\n        if(localStorage.getItem('admin')) {\r\n            idUser = localStorage.getItem('admin');\r\n        } else {\r\n            idUser = user.sub\r\n        }\r\n        setNewId(idUser)\r\n    },[])\r\n\r\n    const editCollection = (e) => {\r\n        e.preventDefault();\r\n        socket.emit('editCollection', {\r\n            _id: id,\r\n            name:  (nameCollection!='')? nameCollection: collectionData[0].name,\r\n            description: (shortNameCollection!='')? shortNameCollection: collectionData[0].description,\r\n            teg: (optionCollection!='')? optionCollection: collectionData[0].teg,\r\n            url: (urlPicture!='')? urlPicture: collectionData[0].url,\r\n            poleItem: JSON.stringify(poleItem)\r\n        })\r\n    }\r\n\r\n    const addPoleItem = (e) =>{\r\n        e.preventDefault();\r\n        if(namePole !=='' && typePole !==''){\r\n            poleItem[`${namePole}`] = typePole;\r\n        }\r\n        setPoleItem(poleItem);\r\n        console.log(poleItem)\r\n    }\r\n\r\n    return(\r\n        (collectionData.length != 0) && (\r\n        <div>\r\n          <Link to={`/user/${newId}`}>Вернуться к коллекциям</Link>\r\n          <Form>\r\n             <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                    <Form.Label>Введите название: </Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setNameCollection(e.target.value)} placeholder={`${collectionData[0].name}`} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>Введите краткое описание: </Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} \r\n                                    onChange={(e)=>setShortNameCollection(e.target.value)}\r\n                                    placeholder={`${collectionData[0].description}`} \r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Выберите тематику: </Form.Label>\r\n                    <Form.Control as=\"select\" onInput={(e)=>setOptionCollection(e.target.value)}>\r\n                        <option></option>\r\n                        <option value='alcohol'>Алкоголь</option>\r\n                        <option value='book'>Книга</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlInput4\">\r\n                    <Form.Label>Введите название: </Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setUrlPicture(e.target.value)} placeholder={`${collectionData[0].url}`}/>\r\n                </Form.Group>\r\n                <Form>\r\n                  <Form.Label><b>Создать поля для Item</b></Form.Label>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput4\">\r\n                    <Form.Label>Поля Item: </Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setNamePole(e.target.value)} placeholder='Имя поля'/>\r\n                    <Form.Label>Выберите тип поля: </Form.Label>\r\n                    <Form.Control as=\"select\" onInput={(e)=>setTypePole(e.target.value)}>\r\n                        <option></option>\r\n                        <option value='number'>Числовое</option>\r\n                        <option value='text'>Текстовое(однострочное)</option>\r\n                        <option value='textarea'>Текстовое(многострочное)</option>\r\n                        <option value='date'>Дата</option>\r\n                        <option value='checkbox'>Булевое</option>\r\n                    </Form.Control>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={addPoleItem}>\r\n                        Добавить\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={editCollection}>\r\n                    Редактировать\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n        )\r\n    )\r\n}",{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":60,"column":7,"nodeType":"165","endLine":60,"endColumn":9,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":13,"column":25,"nodeType":"169","messageId":"170","endLine":13,"endColumn":27},{"ruleId":"171","severity":1,"message":"172","line":25,"column":59,"nodeType":"173","messageId":"174","endLine":25,"endColumn":61},{"ruleId":"163","severity":1,"message":"175","line":35,"column":7,"nodeType":"165","endLine":35,"endColumn":9,"suggestions":"176"},{"ruleId":"163","severity":1,"message":"177","line":21,"column":8,"nodeType":"165","endLine":21,"endColumn":10,"suggestions":"178"},{"ruleId":"171","severity":1,"message":"172","line":28,"column":59,"nodeType":"173","messageId":"174","endLine":28,"endColumn":61},{"ruleId":"179","severity":1,"message":"180","line":45,"column":35,"nodeType":"181","messageId":"182","endLine":45,"endColumn":37},{"ruleId":"167","severity":1,"message":"168","line":45,"column":47,"nodeType":"169","messageId":"170","endLine":45,"endColumn":49},{"ruleId":"179","severity":1,"message":"180","line":45,"column":60,"nodeType":"181","messageId":"182","endLine":45,"endColumn":62},{"ruleId":"163","severity":1,"message":"183","line":36,"column":7,"nodeType":"165","endLine":36,"endColumn":9,"suggestions":"184"},{"ruleId":"167","severity":1,"message":"185","line":58,"column":41,"nodeType":"169","messageId":"170","endLine":58,"endColumn":43},{"ruleId":"167","severity":1,"message":"168","line":60,"column":77,"nodeType":"169","messageId":"170","endLine":60,"endColumn":79},{"ruleId":"167","severity":1,"message":"168","line":64,"column":83,"nodeType":"169","messageId":"170","endLine":64,"endColumn":85},{"ruleId":"163","severity":1,"message":"186","line":19,"column":7,"nodeType":"165","endLine":19,"endColumn":9,"suggestions":"187"},{"ruleId":"167","severity":1,"message":"185","line":33,"column":31,"nodeType":"169","messageId":"170","endLine":33,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":36,"column":67,"nodeType":"169","messageId":"170","endLine":36,"endColumn":69},{"ruleId":"167","severity":1,"message":"168","line":40,"column":73,"nodeType":"169","messageId":"170","endLine":40,"endColumn":75},{"ruleId":"163","severity":1,"message":"186","line":19,"column":7,"nodeType":"165","endLine":19,"endColumn":9,"suggestions":"188"},{"ruleId":"167","severity":1,"message":"185","line":44,"column":96,"nodeType":"169","messageId":"170","endLine":44,"endColumn":98},{"ruleId":"163","severity":1,"message":"186","line":20,"column":7,"nodeType":"165","endLine":20,"endColumn":9,"suggestions":"189"},{"ruleId":"167","severity":1,"message":"168","line":55,"column":40,"nodeType":"169","messageId":"170","endLine":55,"endColumn":42},{"ruleId":"167","severity":1,"message":"168","line":58,"column":47,"nodeType":"169","messageId":"170","endLine":58,"endColumn":49},{"ruleId":"171","severity":1,"message":"190","line":65,"column":43,"nodeType":"173","messageId":"191","endLine":65,"endColumn":45},{"ruleId":"171","severity":1,"message":"190","line":79,"column":49,"nodeType":"173","messageId":"191","endLine":79,"endColumn":51},{"ruleId":"171","severity":1,"message":"190","line":111,"column":43,"nodeType":"173","messageId":"191","endLine":111,"endColumn":45},{"ruleId":"167","severity":1,"message":"168","line":112,"column":31,"nodeType":"169","messageId":"170","endLine":112,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":137,"column":10,"nodeType":"194","messageId":"195","endLine":137,"endColumn":22},{"ruleId":"192","severity":1,"message":"196","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"197","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"185","line":10,"column":38,"nodeType":"169","messageId":"170","endLine":10,"endColumn":40},{"ruleId":"159","replacedBy":"198"},{"ruleId":"161","replacedBy":"199"},{"ruleId":"163","severity":1,"message":"200","line":35,"column":7,"nodeType":"165","endLine":35,"endColumn":9,"suggestions":"201"},{"ruleId":"167","severity":1,"message":"185","line":41,"column":35,"nodeType":"169","messageId":"170","endLine":41,"endColumn":37},{"ruleId":"167","severity":1,"message":"185","line":42,"column":46,"nodeType":"169","messageId":"170","endLine":42,"endColumn":48},{"ruleId":"167","severity":1,"message":"185","line":43,"column":35,"nodeType":"169","messageId":"170","endLine":43,"endColumn":37},{"ruleId":"167","severity":1,"message":"185","line":44,"column":29,"nodeType":"169","messageId":"170","endLine":44,"endColumn":31},{"ruleId":"167","severity":1,"message":"185","line":59,"column":32,"nodeType":"169","messageId":"170","endLine":59,"endColumn":34},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'idLink', 'isAuthenticated', 'socket', and 'user.sub'. Either include them or remove the dependency array.","ArrayExpression",["204"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["205"],"React Hook useEffect has missing dependencies: 'props.location.pathname' and 'socket'. Either include them or remove the dependency array.",["206"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'isAuthenticated', 'props.location.pathname', 'socket', and 'user.sub'. Either include them or remove the dependency array.",["207"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'id' and 'socket'. Either include them or remove the dependency array.",["208"],["209"],["210"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","no-unused-vars","'_refreshPage' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.",["202"],["203"],"React Hook useEffect has missing dependencies: 'id', 'socket', and 'user.sub'. Either include them or remove the dependency array.",["211"],"no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"220","fix":"222"},{"desc":"220","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [idLink, isAuthenticated, socket, user.sub]",{"range":"226","text":"227"},"Update the dependencies array to be: [socket]",{"range":"228","text":"229"},"Update the dependencies array to be: [props.location.pathname, socket]",{"range":"230","text":"231"},"Update the dependencies array to be: [isAuthenticated, props.location.pathname, socket, user.sub]",{"range":"232","text":"233"},"Update the dependencies array to be: [id, socket]",{"range":"234","text":"235"},{"range":"236","text":"235"},{"range":"237","text":"235"},"Update the dependencies array to be: [id, socket, user.sub]",{"range":"238","text":"239"},[2407,2409],"[idLink, isAuthenticated, socket, user.sub]",[1355,1357],"[socket]",[769,771],"[props.location.pathname, socket]",[1253,1255],"[isAuthenticated, props.location.pathname, socket, user.sub]",[604,606],"[id, socket]",[548,550],[667,669],[1357,1359],"[id, socket, user.sub]"]